===================
TimeSeries overview
===================

The file format is designed around a data structure called a *TimeSeries* that stores time-varying data. Each
*TimeSeries* stores an array of data, an array of timestamps that correspond to each data sample, and auxiliary
information necessary for interpret or use that data. To account for different storage requirements and different
modalities, *TimeSeries* objects are extended, or subclassed.

Each *TimeSeries* is stored in its own folder (HDF5 "group") and it has several data fields (HDF5 "datasets") where time
series data is stored. This typically consists of time, data and metadata. 
The *TimeSeries* folder also has attributes that describe the *TimeSeries* (see below), providing data about the
*TimeSeries*, including if/how it's been extended, and a description about it.

*TimeSeries* are found under **acquisition** and **stimulus** folders. The **processing** folder will often have time
series within it, depending on the type of data stored.  With few exceptions, each *TimeSeries* folder will have a
user-defined name, making the file more understandable and assisting in making it self-documenting.

Each *TimeSeries* folder has the following members/fields:

  **data** A field that stores the 'data' that one is interested in, such as a voltage trace, the description of an
  event, or a stimulus image.

  **timestamps** *(double array)* The times corresponding to the elements in *data*. Timestamps can be regularly sampled
  or they can be events. The type of *TimeSeries* will dictate usage. All *timestamps* are stored in seconds since
  experiment start. Timestamps in all *TimeSeries* are aligned to the same time base.

  **num_samples** *(int)* The number of usable data samples stored in the *TimeSeries*. It is important to use this value as sometimes the length of *data* and *timestamps* arrays will not be equal, or only part of the data in those arrays may be relevant/accurate.

  **sync/** This is an optional member (folder) that is used to store time information coming directly from hardware sources. The times in *sync/* are relative to a particular hardware clock and must be synchronized with a global clock before use. Synchronized times are used to populate *timestamps*.


All data directly associated with a *TimeSeries* is stored in its folder/group. Some of this data will be defined as
part of the neurodata specification. Users are able to store custom or lab-specific data in *TimeSeries* as well. It should be noted that such lab-specific customizations may not be recognized by analysis tools/scripts existing outside the lab. The neurodata specification is hopefully rich enough to provide for many needs that are common between labs.


Timeseries attributes
---------------------

Each *TimeSeries* has both computer-readable and human-readable fields that describe it. These are stored as HDF5 attributes on the root *TimeSeries* folder. These attributes are:

+-------------------------------+------------+--------------------------------------------------------------------+
| Attribute                     | type       | Description and comments                                           |
+===============================+============+====================================================================+
| **description**               | text       | Description of the *TimeSeries*                                    |
+-------------------------------+------------+--------------------------------------------------------------------+
| **source**                    | text array | Name of *TimeSeries* or *Modules* that serve as the source for the |
|                               |            | data contained here. It can also be the name of a device, for      |
|                               |            | stimulus or acquisition data                                       |
+-------------------------------+------------+--------------------------------------------------------------------+
| **comments**                  | text       | Human-readable comments about the *TimeSeries*. This text field    |
|                               |            | can be used to store additional information, or descriptive        |
|                               |            | information if the primary description field is populated with a   |
|                               |            | computer-readable string. If a required field of the time series   |
|                               |            | is not populated (eg, if a quantitative value is not known, but    |
|                               |            | it is known that the value was within a certain range), that       |
|                               |            | information should be stored here                                  |
+-------------------------------+------------+--------------------------------------------------------------------+
| **ancestry**                  | text array | A computer-readable field listing class-hierarchy of this          |
|                               |            | *TimeSeries*, with one entry in the array for each ancestor.       |
|                               |            | The class hierarchy is described more fully below. An example      |
|                               |            | is: [0]=“TimeSeries”, [1]=“ElectricalSeries”                       |
|                               |            | [1]=“PatchClampSeries”                                             |
+-------------------------------+------------+--------------------------------------------------------------------+
| **neurodata_type**            | text       | The string “TimeSeries”                                            |
+-------------------------------+------------+--------------------------------------------------------------------+


The *data* array
----------------

The data element in a *TimeSeries* stores an array of a valid HDF5 data type (e.g., a multi-dimentsional floating point array). Contents of that array can be of any unit so long as the unit is consistently used throughout the array. To allow interpretation of the data, the data field has an attribute that indicates the SI unit that the data relates to, or appropriate counterpart such as color-space, and the multiplier necessary to convert stored values to the specified SI unit.

The data field has the following attributes:

+-------------------------------+------------+--------------------------------------------------------------------+
| Attribute                     | type       | Description and comments                                           |
+===============================+============+====================================================================+
| **si_unit**                   | text       | The base unit for data stored in the *TimeSeries*. If no unit is   |
|                               |            | appropriate, the most relevant identifier should be provided       |
|                               |            | (e.g., which colorspace). SI units are preferred, with exception   |
|                               |            | of temperature, as Centigrade is more commonly used than Kelvin    |
+-------------------------------+------------+--------------------------------------------------------------------+
| **conversion**                | float      | Scalar to multiply each element in data to convert it to the       |
|                               |            | specified si_unit                                                  |
+-------------------------------+------------+--------------------------------------------------------------------+
| **resolution**                | float      | Smallest meaningful difference between values in data, stored      |
|                               |            | in units specified by si_unit                                      |
+-------------------------------+------------+--------------------------------------------------------------------+



The *timestamps* array (or *starting_time* scalar)
--------------------------------------------------

The timestamp array stores the times for each element in the *data* array. These times are stored in number of seconds since the experiment start time. Everything in the *timestamps* array can be assumed to have been aligned to a common timebase and to have been corrected from any synchronization issues between different pieces of acquisition or stimulus hardware.

In some edge cases, it is not practical to store every timestamp (e.g., single-cell patch-clamp data sampled at 200KHz).
For these cases, a field called *starting_time* is used, which stores the starting time of the timeseries along with the
exact sampling rate.
**Note**: Only one of *timestamps* and *starting_time* will be present.

The *timestamps* field has the following attributes:

+-------------------------------+------------+--------------------------------------------------------------------+
| Attribute                     | type       | Description and comments                                           |
+===============================+============+====================================================================+
| **interval**                  | int        | Presently, time stamps are stored for every sample. In cases       |
|                               |            | where all timestamps are not available (eg, stimulus template),    |
|                               |            | interval=0, and a single value (zero) is stored in timestamp       |
|                               |            | array. Other uses of this field are reserved                       |
+-------------------------------+------------+--------------------------------------------------------------------+
| **units**                     | text       | The string “Seconds (all neurodata timestamps are in seconds)”     |
+-------------------------------+------------+--------------------------------------------------------------------+

The *starting_time* field has the following attributes:

+-------------------------------+------------+--------------------------------------------------------------------+
| Attribute                     | type       | Description and comments                                           |
+===============================+============+====================================================================+
| **rate**                      | float      | Data sampling or stimulus presentation rate (Hz)                   |
+-------------------------------+------------+--------------------------------------------------------------------+
| **units**                     | text       | The string “Seconds (all neurodata timestamps are in seconds)”     |
+-------------------------------+------------+--------------------------------------------------------------------+


*TimeSeries* subclasses
-----------------------

The *TimeSeries* object is itself very general. To make *TimeSeries* objects more useful for data storage and analysis,
instances are defined that are specialized to represent different types of data and different data modalities. The
process of specialization is here called subclassing, with a subclass maintaining all of the data interface (eg, folders
and datasets) of the parent *TimeSeries* while adding new folders and/or datasets of its own.

For example, a *TimeSeries* is defined as:

+-------------------------------+---------------+-----------------------------------------------------------------+
| Group or dataset              | type          | Description and comments                                        |
+===============================+===============+=================================================================+
| **TimeSeries**                | folder        |                                                                 |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **data**                    | <polymorphic> |                                                                 |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **timestamps**              | double array  |                                                                 |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **num_samples**             | int           |                                                                 |
+-------------------------------+---------------+-----------------------------------------------------------------+

A *TimeSeries* can store anything, but that generality isn't always helpful. Sometimes one wants to store image data,
and there are fields that are required for interpreting image data. To achieve this, *TimeSeries* was subclassed to create an ImageSeries:

+-------------------------------+---------------+-----------------------------------------------------------------+
| Group or dataset              | type          | Description and comments                                        |
+===============================+===============+=================================================================+
| **ImageSeries**               | folder        | A subclass of *TimeSeries*                                      |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **data**                    | <polymorphic> | Inherited from *TimeSeries*                                     |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **timestamps**              | double array  | Inherited from *TimeSeries*                                     |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **num_samples**             | int           | Inherited from *TimeSeries*                                     |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **format**                  | text          | Format that the image stack is stored in (eg, raw or png)       |
+-------------------------------+---------------+-----------------------------------------------------------------+
| + **dimension**               | int array     | Number of pixels on x and y (and z) axes                        |
+-------------------------------+---------------+-----------------------------------------------------------------+

An ImageSeries stores features that are common to all images. Images presented as stimuli, or images recorded during an experiment, use a more narrowly defined series called an OpticalSeries:

+-------------------------------------+-------------+-------------------------------------------------------------+
| Group or dataset                    | type        | Description and comments                                    |
+=====================================+=============+=============================================================+
| **OpticalSeries**                   | folder      | A subclass of *ImageSeries*                                 |
+-------------------------------------+-------------+-------------------------------------------------------------+
| + <all datasets from *TimeSeries*>  |             | Inherited from *TimeSeries*                                 |
+-------------------------------------+-------------+-------------------------------------------------------------+
| + <all datasets from *ImageSeries*> |             | Inherited from *ImageSeries*                                |
+-------------------------------------+-------------+-------------------------------------------------------------+
| + **field_of_view**                 | float array | The physical width and height of the image                  |
+-------------------------------------+-------------+-------------------------------------------------------------+
| + **orientation**                   | text        | Information required to interpret the image. E.g., "Top     |
|                                     |             | of the image is rostral"                                    |
+-------------------------------------+-------------+-------------------------------------------------------------+
| + **distance**                      | float       | Distance between eye and stimulus, or between camera and    |
|                                     |             | what's being recorded                                       |
+-------------------------------------+-------------+-------------------------------------------------------------+

More narrowly defined image classes can be defined (for example, a *TwoPhotonSeries*). Users are free to define their
own subclasses, and new subclasses will be defined as part of the format in time. The subclassing approach ensures that
newly defined classes will still be readable by tools that are only aware of existing subclasses. For example, if a user
defines a subclass of OpticalSeries called *NikonSeries*, any script capable of reading an *OpticalSeries* will still
read data from the *NikonSeries*. It will not have knowledge of any *NikonSeries* datasets, but it will still operate on everything defined for the *OpticalSeries*.

